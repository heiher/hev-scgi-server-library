/* hev-scgi-1.0.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "HevSCGI", gir_namespace = "HevSCGI", gir_version = "1.0", lower_case_cprefix = "hev_scgi_")]
namespace HevSCGI {
	[CCode (cheader_filename = "hev-scgi-1.0.h", type_id = "hev_scgi_request_get_type ()")]
	public class Request : GLib.Object {
		[CCode (has_construct_function = false, type = "GObject*")]
		public Request ();
		public unowned GLib.HashTable<string,string> get_header_hash_table ();
		public unowned GLib.InputStream get_input_stream ();
		public void read_header (GLib.Func callback);
		public void set_input_stream (GLib.InputStream input_stream);
	}
	[CCode (cheader_filename = "hev-scgi-1.0.h", type_id = "hev_scgi_response_get_type ()")]
	public class Response : GLib.Object {
		[CCode (has_construct_function = false, type = "GObject*")]
		public Response ();
		public unowned GLib.HashTable<string,string> get_header_hash_table ();
		public unowned GLib.OutputStream get_output_stream ();
		public void set_output_stream (GLib.OutputStream output_stream);
		public void write_header (GLib.Func callback);
	}
	[CCode (cheader_filename = "hev-scgi-1.0.h", type_id = "hev_scgi_server_get_type ()")]
	public class Server : GLib.Object {
		[CCode (has_construct_function = false, type = "GObject*")]
		public Server ();
		public void start ();
		public void stop ();
	}
	[CCode (cheader_filename = "hev-scgi-1.0.h", type_id = "hev_scgi_task_get_type ()")]
	public class Task : GLib.Object {
		[CCode (has_construct_function = false, type = "GObject*")]
		public Task ();
		public unowned HevSCGI.Handler get_handler ();
		public unowned HevSCGI.Request get_request ();
		public unowned HevSCGI.Response get_response ();
		public unowned GLib.SocketConnection get_socket_connection ();
		public void set_handler (HevSCGI.Handler handler);
		public void set_socket_connection (GLib.SocketConnection connection);
	}
	[CCode (cheader_filename = "hev-scgi-1.0.h", type_cname = "HevSCGIHandlerInterface", type_id = "hev_scgi_handler_get_type ()")]
	public interface Handler : GLib.Object {
		public abstract unowned string get_alias ();
		public abstract GLib.KeyFile get_config ();
		public abstract unowned string get_name ();
		public abstract unowned string get_pattern ();
		public abstract unowned string get_version ();
		public abstract void handle (GLib.Object scgi_task);
	}
}
