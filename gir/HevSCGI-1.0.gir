<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <package name="hev-scgi-1.0"/>
  <c:include name="hev-scgi-1.0.h"/>
  <namespace name="HevSCGI"
             version="1.0"
             shared-library="libhev-scgi-server.so"
             c:identifier-prefixes="HevSCGI"
             c:symbol-prefixes="hev_scgi">
    <interface name="Handler"
               c:symbol-prefix="handler"
               c:type="HevSCGIHandler"
               glib:type-name="HevSCGIHandler"
               glib:get-type="hev_scgi_handler_get_type"
               glib:type-struct="HandlerInterface">
      <virtual-method name="get_alias" invoker="get_alias">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_pattern" invoker="get_pattern">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_version" invoker="get_version">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="handle" invoker="handle">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="scgi_task" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_alias" c:identifier="hev_scgi_handler_get_alias">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="hev_scgi_handler_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_pattern" c:identifier="hev_scgi_handler_get_pattern">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_version" c:identifier="hev_scgi_handler_get_version">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="handle" c:identifier="hev_scgi_handler_handle">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="scgi_task" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="HandlerInterface"
            c:type="HevSCGIHandlerInterface"
            glib:is-gtype-struct-for="Handler">
      <field name="parent_scgi_handler">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_alias">
        <callback name="get_alias">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Handler" c:type="HevSCGIHandler*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Handler" c:type="HevSCGIHandler*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_version">
        <callback name="get_version">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Handler" c:type="HevSCGIHandler*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_pattern">
        <callback name="get_pattern">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Handler" c:type="HevSCGIHandler*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle">
        <callback name="handle">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Handler" c:type="HevSCGIHandler*"/>
            </parameter>
            <parameter name="scgi_task" transfer-ownership="none">
              <type name="GObject.Object" c:type="GObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Request"
           c:symbol-prefix="request"
           c:type="HevSCGIRequest"
           parent="GObject.Object"
           glib:type-name="HevSCGIRequest"
           glib:get-type="hev_scgi_request_get_type"
           glib:type-struct="RequestClass">
      <constructor name="new"
                   c:identifier="hev_scgi_request_new"
                   version="0.0.1">
        <doc xml:whitespace="preserve">Creates a request.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">A #HevSCGIRequest.</doc>
          <type name="Request" c:type="GObject*"/>
        </return-value>
      </constructor>
      <method name="get_header_hash_table"
              c:identifier="hev_scgi_request_get_header_hash_table"
              version="0.0.1">
        <doc xml:whitespace="preserve">Gets the header hash table @self is for.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GHashTable owned by @self. Do not free.</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <type name="utf8"/>
          </type>
        </return-value>
      </method>
      <method name="get_input_stream"
              c:identifier="hev_scgi_request_get_input_stream"
              version="0.0.1">
        <doc xml:whitespace="preserve">Gets the input stream @self is for.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GInputStream owned by @self. Do not free.</doc>
          <type name="Gio.InputStream" c:type="GInputStream*"/>
        </return-value>
      </method>
      <method name="read_header_async"
              c:identifier="hev_scgi_request_read_header_async"
              version="0.0.1">
        <doc xml:whitespace="preserve">Writes header #HevSCGIRequest is for.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <doc xml:whitespace="preserve">optional #GCancellable object, %NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:whitespace="preserve">callback to call when the request is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_header_finish"
              c:identifier="hev_scgi_request_read_header_finish"
              throws="1">
        <doc xml:whitespace="preserve">Finishes an asynchronous read operation.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if the request was read successfully.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:whitespace="preserve">A #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_input_stream"
              c:identifier="hev_scgi_request_set_input_stream">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="input_stream" transfer-ownership="none">
            <type name="Gio.InputStream" c:type="GInputStream*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="RequestClass"
            c:type="HevSCGIRequestClass"
            glib:is-gtype-struct-for="Request">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Response"
           c:symbol-prefix="response"
           c:type="HevSCGIResponse"
           parent="GObject.Object"
           glib:type-name="HevSCGIResponse"
           glib:get-type="hev_scgi_response_get_type"
           glib:type-struct="ResponseClass">
      <constructor name="new"
                   c:identifier="hev_scgi_response_new"
                   version="0.0.1">
        <doc xml:whitespace="preserve">Creates a response.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">A #HevSCGIResponse.</doc>
          <type name="Response" c:type="GObject*"/>
        </return-value>
      </constructor>
      <method name="get_header_hash_table"
              c:identifier="hev_scgi_response_get_header_hash_table"
              version="0.0.1">
        <doc xml:whitespace="preserve">Gets the header hash table @self is for.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GHashTable owned by @self. Do not free.</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <type name="utf8"/>
          </type>
        </return-value>
      </method>
      <method name="get_output_stream"
              c:identifier="hev_scgi_response_get_output_stream"
              version="0.0.1">
        <doc xml:whitespace="preserve">Gets the output stream @self is for.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GOutputStream owned by @self. Do not free.</doc>
          <type name="Gio.OutputStream" c:type="GOutputStream*"/>
        </return-value>
      </method>
      <method name="set_output_stream"
              c:identifier="hev_scgi_response_set_output_stream"
              version="0.0.1">
        <doc xml:whitespace="preserve">Sets the output stream @self is for.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="output_stream" transfer-ownership="none">
            <doc xml:whitespace="preserve">A #GOutputStream</doc>
            <type name="Gio.OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_header"
              c:identifier="hev_scgi_response_write_header"
              version="0.0.1">
        <doc xml:whitespace="preserve">Writes header #HevSCGIResponse is for.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if the response was write successfully.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="write_header_async"
              c:identifier="hev_scgi_response_write_header_async"
              version="0.0.1">
        <doc xml:whitespace="preserve">Writes header #HevSCGIResponse is for.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <doc xml:whitespace="preserve">optional #GCancellable object, %NULL to ignore.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:whitespace="preserve">callback to call when the response is satisfied</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_header_finish"
              c:identifier="hev_scgi_response_write_header_finish"
              throws="1">
        <doc xml:whitespace="preserve">Finishes an asynchronous write operation.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if the response was write successfully.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:whitespace="preserve">A #GAsyncResult</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ResponseClass"
            c:type="HevSCGIResponseClass"
            glib:is-gtype-struct-for="Response">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Server"
           c:symbol-prefix="server"
           c:type="HevSCGIServer"
           parent="GObject.Object"
           glib:type-name="HevSCGIServer"
           glib:get-type="hev_scgi_server_get_type"
           glib:type-struct="ServerClass">
      <constructor name="new" c:identifier="hev_scgi_server_new">
        <return-value transfer-ownership="full">
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
      </constructor>
      <method name="start" c:identifier="hev_scgi_server_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="stop" c:identifier="hev_scgi_server_stop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ServerClass"
            c:type="HevSCGIServerClass"
            glib:is-gtype-struct-for="Server">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Task"
           c:symbol-prefix="task"
           c:type="HevSCGITask"
           parent="GObject.Object"
           glib:type-name="HevSCGITask"
           glib:get-type="hev_scgi_task_get_type"
           glib:type-struct="TaskClass">
      <constructor name="new" c:identifier="hev_scgi_task_new" version="0.0.1">
        <doc xml:whitespace="preserve">Creates a task.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">A #HevSCGITask.</doc>
          <type name="Task" c:type="GObject*"/>
        </return-value>
      </constructor>
      <method name="get_handler"
              c:identifier="hev_scgi_task_get_handler"
              version="0.0.1">
        <doc xml:whitespace="preserve">Gets the handler @self is for.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">A #HevSCGIHandler owned by @self. Do not free.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
      </method>
      <method name="get_request"
              c:identifier="hev_scgi_task_get_request"
              version="0.0.1">
        <doc xml:whitespace="preserve">Gets the request @self is for.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">A #HevSCGIRequest owned by @self. Do not free.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
      </method>
      <method name="get_response"
              c:identifier="hev_scgi_task_get_response"
              version="0.0.1">
        <doc xml:whitespace="preserve">Gets the response @self is for.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">A #HevSCGIResponse owned by @self. Do not free.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
      </method>
      <method name="get_socket_connection"
              c:identifier="hev_scgi_task_get_socket_connection"
              version="0.0.1">
        <doc xml:whitespace="preserve">Gets the socket connection @self is for.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GSocketConnection owned by @self. Do not free.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
      </method>
      <method name="set_handler"
              c:identifier="hev_scgi_task_set_handler"
              version="0.0.1">
        <doc xml:whitespace="preserve">Sets the handler @self is for.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handler" transfer-ownership="none">
            <doc xml:whitespace="preserve">A #HevSCGIHandler.</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_socket_connection"
              c:identifier="hev_scgi_task_set_socket_connection"
              version="0.0.1">
        <doc xml:whitespace="preserve">Sets the socket connection @self is for.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:whitespace="preserve">A #GSocketConnection.</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="TaskClass"
            c:type="HevSCGITaskClass"
            glib:is-gtype-struct-for="Task">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
  </namespace>
</repository>
